[build]
  publish = "build"
  command = "npm run build"

[build.environment]
  NODE_VERSION = "18"
  NPM_VERSION = "9"

# Headers for caching and security
[[headers]]
  for = "/static/css/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "text/css; charset=utf-8"

[[headers]]
  for = "/static/js/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "application/javascript; charset=utf-8"

[[headers]]
  for = "/static/media/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "image/png"

[[headers]]
  for = "*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "image/jpeg"

[[headers]]
  for = "*.jpeg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "image/jpeg"

[[headers]]
  for = "*.gif"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "image/gif"

[[headers]]
  for = "*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "image/svg+xml"

[[headers]]
  for = "*.webp"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "image/webp"

[[headers]]
  for = "*.ico"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "image/x-icon"

[[headers]]
  for = "*.woff"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "font/woff"

[[headers]]
  for = "*.woff2"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "font/woff2"

[[headers]]
  for = "*.ttf"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "font/ttf"

[[headers]]
  for = "*.eot"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "application/vnd.ms-fontobject"

[[headers]]
  for = "/manifest.json"
  [headers.values]
    Cache-Control = "public, max-age=604800"
    Content-Type = "application/json"

[[headers]]
  for = "*.json"
  [headers.values]
    Cache-Control = "public, max-age=604800"
    Content-Type = "application/json"

[[headers]]
  for = "/robots.txt"
  [headers.values]
    Cache-Control = "public, max-age=86400"
    Content-Type = "text/plain"

[[headers]]
  for = "/sitemap.xml"
  [headers.values]
    Cache-Control = "public, max-age=86400"
    Content-Type = "application/xml"

[[headers]]
  for = "*.txt"
  [headers.values]
    Cache-Control = "public, max-age=86400"
    Content-Type = "text/plain"

[[headers]]
  for = "*.xml"
  [headers.values]
    Cache-Control = "public, max-age=86400"
    Content-Type = "application/xml"

[[headers]]
  for = "/sw.js"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"
    Content-Type = "application/javascript"

# HTML files with shorter cache
[[headers]]
  for = "*.html"
  [headers.values]
    Cache-Control = "public, max-age=3600, must-revalidate"
    Content-Type = "text/html; charset=utf-8"

# Root index with shorter cache
[[headers]]
  for = "/"
  [headers.values]
    Cache-Control = "public, max-age=3600, must-revalidate"
    Content-Type = "text/html; charset=utf-8"

# Security headers for all files
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "camera=(), microphone=(), geolocation=(), payment=()"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"

# SPA fallback for React Router
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Optimize images
[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = true

# Edge handlers for enhanced performance
[[edge_handlers]]
  handler = "cache-control"
  path = "/static/*"

# Plugin configurations
[[plugins]]
  package = "@netlify/plugin-lighthouse"

  [plugins.inputs]
    output_path = "reports/lighthouse.html"

[[plugins]]
  package = "netlify-plugin-minify-html"

  [plugins.inputs]
    contexts = ["production"]

[[plugins]]
  package = "netlify-plugin-inline-critical-css"

  [plugins.inputs]
    target = "build"

# Performance optimizations
[template.environment]
  GENERATE_SOURCEMAP = "false"
  INLINE_RUNTIME_CHUNK = "false"
  IMAGE_INLINE_SIZE_LIMIT = "0"

# Context-specific settings
[context.production]
  command = "npm run build"

[context.deploy-preview]
  command = "npm run build"

[context.branch-deploy]
  command = "npm run build"

# Functions (if needed in future)
[functions]
  directory = "netlify/functions"

# Forms (if needed for contact form)
[build.ignore]
  command = "git diff --quiet $CACHED_COMMIT_REF $COMMIT_REF . || exit 1"
